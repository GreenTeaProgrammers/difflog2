services:
  user:
    build:
      context: ./userService # ディレクトリ名
      dockerfile: ./Dockerfile
      target: builder # マルチステージビルドの場合、ビルド対象を指定
    command:
      - ./main
    container_name: user
    env_file: './user/.env'
    ports:
      - "8080:8081"
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=difflog
    depends_on:
      - db
  auth:
    build:
      context: ./authService
      dockerfile: ./Dockerfile
      target: builder # マルチステージビルドの場合、ビルド対象を指定
    command:
      - ./main
    container_name: auth
    env_file: './auth/.env'
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=difflog
    depends_on:
      - db
  capture:
    build:
      context: ./captureService
      dockerfile: ./Dockerfile
      target: builder # マルチステージビルドの場合、ビルド対象を指定
    command:
      - ./main
    container_name: capture
    env_file: './capture/.env'
    ports:
      - "8082:8081"
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=difflog
    depends_on:
      - db
  location:
    build:
      context: ./locationService
      dockerfile: ./Dockerfile
      target: builder # マルチステージビルドの場合、ビルド対象を指定
    command:
      - ./main
    container_name: location
    env_file: './location/.env'
    ports:
      - "8083:8081"
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=difflog
    depends_on:
      - db
  commit:
    build:
      context: ./commitService
      dockerfile: ./Dockerfile
      target: builder # マルチステージビルドの場合、ビルド対象を指定
    command:
      - ./main
    container_name: commit
    env_file: './commit/.env'
    ports:
      - "8084:8081"
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=difflog
    depends_on:
      - db

  frontend:
    build: ./frontend/ShareTube
    container_name: frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    stdin_open: true
    tty: true
    environment:
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true

  db:
    image: mysql:8.0
    container_name: db
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: video_sns
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:
  node_modules:
